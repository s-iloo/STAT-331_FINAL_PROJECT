---
title: "Final Project"
subtitle: ""
author: "Hayley C., Felicia P., Ian L., Shane W."
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
    number-sections: true
editor: source
execute: 
  error: true
  echo: false
  message: false
  warning: false
---

## Library Imports

```{r}
library(tidyverse)
library(dplyr)
library(gganimate)
library(plotly)
```

## Data

### Variables

Average daily income is the mean daily household per capita income or consumption expenditure from the survey expressed in 2017 constant internship dollars.

The life expectancy, at birth is the number of years a newborn infant would live if the current mortality rates at different ages were to stay the same throughout its life.

### Hypothesized Relationship Between the Variables

Higher average daily income is positively associated with higher life expectancy at birth. 

```{r Load data}

average_daily_income_data <- read.csv("./mincpcap_cppp.csv")
life_expectancy_data <- read.csv("./lifeExpectancy.csv")
```

```{r Check Column Types}

average_daily_income_data |> 
  summarise(across(.cols = everything(), 
                   .fns = typeof))
life_expectancy_data |> 
  summarise(across(.cols = everything(), 
                   .fns = typeof))
```

```{r }
average_daily_income_data <- average_daily_income_data |>
  mutate(across(-country, as.numeric))
life_expectancy_data <- life_expectancy_data |> 
  mutate(across(-country, as.numeric))
```

### How the Data was Cleaned

To the clean the data, we looked at the data types of the values and saw that all the numbers were of the type, character, despite having their class be numeric. To clean this, we mutated each year's column to be a numeric type.

The year names initially had an X in front of the name when the data was first loaded. We chose to keep this naming convention so that when referencing the name, we could use the more common way of referencing a column name instead of back tics.

Instead of eliminating NA values in average, those values were left so that when joining the data, we can make a decision which years or countries to pick based on data that overlaps between the data frames.

```{r}
avg_di_long <- average_daily_income_data|>
  pivot_longer(cols = -country,
               names_to = "Year",
               values_to = "Average Daily Income")

avg_le_long <- life_expectancy_data|>
  pivot_longer(cols = -country,
               names_to = "Year",
               values_to = "Average Life Expectancy")
```

### How the Data was Pivoted

Next, we pivoted the data by country to separate each year into individual observations. For each country and year, we now have the corresponding average daily income and average life expectancy.

### How the Data was Joined

In order to create one data table, we must join our two data sets that were cleaned and pivoted. One way we can do this is through an inner join, which will also handle and missing data by dropping it.
```{r}
daily_income_and_life_expectancy <- avg_di_long |> 
  inner_join(avg_le_long, join_by(country, Year)) |>
  rename(Country = country)
```
In addition to joining the data, the name of the "country" column was capitalized in order to have uniformity among the variable names.

### Exploring the Relationship Between the Two Variables

The variables to be explored are the average daily income in relation to the average life expectancy. The relationship to be explored is how the income effects the life expectancy.

The explanatory variable is the average income and the response variable is the average life expectancy.

```{r}
daily_income_and_life_expectancy |>
  ggplot(aes(x = `Average Daily Income`, y = `Average Life Expectancy`)) +
    geom_point(alpha = 0.7, color = "steelblue") +
    theme_minimal() +
    labs(title = "Relationship between Average Daily Income and Life Expectancy",
         x = "Average Daily Income",
         y = "",
         subtitle = "Average Life Expectancy at Birth")
```
To explore the relationship overtime
```{r}
daily_income_and_life_expectancy |>
  mutate(Year = as.integer(str_remove(Year, "X"))) |>
  plot_ly(
    x = ~`Average Daily Income`,
    y = ~`Average Life Expectancy`,
    text = ~Country,
    frame = ~Year,
    type = 'scatter',
    mode = 'markers',
    marker = list(size = 10, opacity = 0.7)
  ) |>
  layout(
    title = "Changes in Average Daily Income and Life Expectancy Over Time",
    xaxis = list(title = "Average Daily Income"),
    yaxis = list(title = "Average Life Expectancy at Birth")
  ) |>
  animation_opts(
    frame = 1000, # milliseconds per frame
    transition = 0, # duration of the transition between frames
    redraw = FALSE
  ) |>
  animation_slider(
    currentvalue = list(prefix = "Year: ")
  )
```

